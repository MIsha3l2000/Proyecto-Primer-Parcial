# -*- coding: utf-8 -*-
"""Tarea - WordCloud.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i1jm871AQgZRM5SHXDHpkL6YkLFFfSd8
"""

import requests
from wordcloud import WordCloud, STOPWORDS 
import matplotlib.pyplot as plt 
import pandas as pd
import numpy as np
from PIL import Image

print("Ingrese el id del usuario:")
id = input()

r = requests.get('https://es.stackoverflow.com/users/'+ id +'?tab=tags')

c = r.content
from bs4 import BeautifulSoup
soup = BeautifulSoup(c)

Pag = soup.find_all("a", class_="s-pagination--item js-pagination-item")

Etiquetas = list()
Frecuencias = list()

paginas=0
for i in Pag:
    paginas=paginas+1

y = 0
while y < paginas:
  y = y + 1
  # Realizar la solicitud a una URL
  r = requests.get('https://es.stackoverflow.com/users/'+ id +'?tab=tags&sort=votes&page='+ str(y))

  # Crear soup a partir del contenido de la solicitud
  c = r.content
  from bs4 import BeautifulSoup
  soup = BeautifulSoup(c)

  # Encontrar etiquetas y frecuencia de las mismas (Se obtubo el identificador mediante inspeccionar)
  Tags = soup.find_all("a", class_="post-tag")
  Points = soup.find_all("div", class_="answer-votes")

  x=0
  for i in Points:
    frec = str(i.text)

    if frec.find('k'):
      frec = frec.replace("k", "000")
    
    if int(frec) > 0:
      x=x+1
      Frecuencias.append(int(frec))


  for i in Tags:
    Etiquetas.append(i.text)

# Creamos un diccionario formado por dos listas pares
zip_iterator = zip(Etiquetas, Frecuencias)
diccionario = dict(zip_iterator)

# Generamos la WordCloud mediante un dicccionario de frecuencias

wordcloud = WordCloud()
wordcloud = WordCloud().generate_from_frequencies(dict(diccionario))
plt.figure()
plt.imshow(wordcloud, interpolation="bilinear")
plt.axis("off")
plt.show()